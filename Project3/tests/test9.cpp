// Autogenerated Scheme to C++ Code
// File: ./tests/test9.cpp

#include <iostream>
#include "Object.h"
using namespace std;


Object cond_ex_1(Object choice, Object value)
{
Object __RetVal;
if ((choice == Object(1))value(choice == Object(2))(value * value)(choice == Object(3))if ((value == Object(0)))
{
__RetVal = Object("Division by 0 not defined");
}else
{
__RetVal = (Object(1) / value);
}
Object(0))
{
return __RetVal;
}

Object square(Object n)
{
Object __RetVal;
if (numberp(n))
{
(__RetVal = n * n);
}else
{
__RetVal = Object ("invalid_parameter");
}
return __RetVal;
}

Object reciprocal(Object n)
{
Object __RetVal;
if ((numberp(n) && !((n == Object(0)))))
{
__RetVal = (Object(1) / n);
}else
{
__RetVal = Object ("invalid_parameter");
}
return __RetVal;
}

Object cond_ex_2(Object choice, Object value)
{
Object __RetVal;
if ((choice == Object(1))value(choice == Object(2))square(value)(choice == Object(3))reciprocal(value)Object(0))
{
return __RetVal;
}


int main()
{
Object __RetVal;
cout << cond_ex_1(Object(1), Object(5.0)) ;
cout << endl;
cout << cond_ex_1(Object(1), Object(-7.0)) ;
cout << endl;
cout << cond_ex_1(Object(2), Object(5.0)) ;
cout << endl;
cout << cond_ex_1(Object(2), Object(-7.0)) ;
cout << endl;
cout << cond_ex_1(Object(3), Object(5.0)) ;
cout << endl;
cout << cond_ex_1(Object(3), Object(-7.0)) ;
cout << endl;
cout << cond_ex_1(Object(3), Object(0)) ;
cout << endl;
cout << cond_ex_1(Object(-1), Object(5.0)) ;
cout << endl;
cout << cond_ex_2(Object(1), Object(5.0)) ;
cout << endl;
cout << cond_ex_2(Object(1), Object(-7.0)) ;
cout << endl;
cout << cond_ex_2(Object(2), Object(5.0)) ;
cout << endl;
cout << cond_ex_2(Object(2), Object(-7.0)) ;
cout << endl;
cout << cond_ex_2(Object(3), Object(5.0)) ;
cout << endl;
cout << cond_ex_2(Object(3), Object(-7.0)) ;
cout << endl;
cout << cond_ex_2(Object(3), Object(0)) ;
cout << endl;
cout << cond_ex_2(Object(-1), Object(5.0)) ;
cout << endl;
return 0;
}
